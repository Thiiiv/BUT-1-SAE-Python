#-----Imports-----

from upemtk import *
from random import randint
from time import *

#-----Fonctions-----

def j1():
    lst_col = ["blue","green","purple"]
    hazard = randint(0, 2)
    joueur1 = "black"
    if hazard == 0:
        joueur1 = lst_col[0]
    if hazard == 1:
        joueur1 = lst_col[1]
    if hazard == 2:
        joueur1 = lst_col[2]
    return joueur1

def j2():
    lst_col = ["red","yellow","orange"]
    hazard = randint(0, 2)
    joueur2 = "black"
    if hazard == 0:
        joueur2 = lst_col[0]
    if hazard == 1:
        joueur2 = lst_col[1]
    if hazard == 2:
        joueur2 = lst_col[2]
    return joueur2

def intersection(x, y, lst_x2, lst_y2, joueur, compteur) :
    temp = 0
    lst_cordonnees_x = lst_x2
    lst_cordonnees_y = lst_y2
    distance_hori = []
    distance_verti = []
    tag = ''
    if joueur == joueur1 :
        tag = 'j1'
    else :
        tag = 'j2'
        
    for j in range(len(lst_cordonnees_x)) :
        if x >= lst_cordonnees_x[j] :
            distance_hori.append(x - lst_cordonnees_x[j])
        if lst_cordonnees_x[j] > x :
            distance_hori.append(lst_cordonnees_x[j] - x)
        if y >= lst_cordonnees_y[j] :
            distance_verti.append(y - lst_cordonnees_y[j])
        if lst_cordonnees_y[j] > y :
            distance_verti.append(lst_cordonnees_y[j] - y)
    for k in range(len(distance_hori)) :
        temp = 1
        if distance_verti[k] < rayon*2 and distance_hori[k] < rayon*2 :
            lst_cordonnees_x.pop(k)
            lst_cordonnees_y.pop(k)
            temp = 0
            break
    if temp != 0 :
        cercle(x, y, rayon, "black", joueur, 1, tag)
    return distance_hori, distance_verti

def Jeu():
    cree_fenetre(500, 500)
    tour = 5
    
    distance_hori1 = []
    distance_verti1 = []
    distance_hori2 = []
    distance_verti2 = []

    lst_cordonnees_x1 = []
    lst_cordonnees_x2 = []
    lst_cordonnees_y1 = []
    lst_cordonnees_y2 = []

    temp = 0
    compteur = 0
    for i in range(tour):
        distance_verti1 = []
        distance_verti2 = []
        distance_hori1 = []
        distance_hori2 = []

        temp = 0
        x1, y1, z1 = attente_clic()
        lst_cordonnees_x1.append(x1)
        lst_cordonnees_y1.append(y1)
        if i == 0 :
            cercle(x1, y1, rayon, "black", joueur1, 1, 'j1')
        else :
            intersection(x1, y1, lst_cordonnees_x2, lst_cordonnees_y2, joueur1, compteur)

        x2, y2, z2 = attente_clic()
        lst_cordonnees_x2.append(x2)
        lst_cordonnees_y2.append(y2)

        print()
        print("x2 :", x2, "| y2 :", y2)
        intersection(x2, y2, lst_cordonnees_x1, lst_cordonnees_y1, joueur2, compteur)
        compteur += 1

        # Test
        print("distance_verti1 :", distance_verti1, "| distance_hori1 :", distance_hori1, "| distance_verti2 :", distance_verti2, "| distance_hori2 :", distance_hori2, "| compteur :", compteur, "| temp :", temp)
        print("lst_cordonnees_x1", lst_cordonnees_x1, "| lst_cordonnees_y1 :", lst_cordonnees_y1)
        
        mise_a_jour()    
    attente_clic()
    sleep(1)
    ferme_fenetre()

#-----main-----

if __name__ == '__main__':
    joueur1 = j1()
    joueur2 = j2()
    rayon = 50
    Jeu()
